<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="2" passed="1" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-08-05T23:54:40 IST" name="Default suite" finished-at="2025-08-05T23:55:34 IST" duration-ms="54301">
    <groups>
    </groups>
    <test started-at="2025-08-05T23:54:40 IST" name="Default test" finished-at="2025-08-05T23:55:34 IST" duration-ms="54301">
      <class name="testclasses.CreateCO">
        <test-method is-config="true" signature="startReport()[pri:0, instance:testclasses.CreateCO@2bdd8394]" started-at="2025-08-05T23:54:39 IST" name="startReport" finished-at="2025-08-05T23:54:40 IST" duration-ms="242" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method is-config="true" signature="setup(java.lang.String,java.lang.reflect.Method)[pri:0, instance:testclasses.CreateCO@2bdd8394]" started-at="2025-08-05T23:54:40 IST" name="setup" finished-at="2025-08-05T23:54:42 IST" duration-ms="2258" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testclasses.CreateCO.testCOWithoutItem()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testCOWithoutItem()[pri:1, instance:testclasses.CreateCO@2bdd8394]" started-at="2025-08-05T23:54:42 IST" name="testCOWithoutItem" finished-at="2025-08-05T23:55:06 IST" duration-ms="23619" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCOWithoutItem -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:testclasses.CreateCO@2bdd8394]" started-at="2025-08-05T23:55:06 IST" name="teardown" finished-at="2025-08-05T23:55:06 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCOWithoutItem status=SUCCESS method=CreateCO.testCOWithoutItem()[pri:1, instance:testclasses.CreateCO@2bdd8394] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="setup(java.lang.String,java.lang.reflect.Method)[pri:0, instance:testclasses.CreateCO@2bdd8394]" started-at="2025-08-05T23:55:06 IST" name="setup" finished-at="2025-08-05T23:55:07 IST" duration-ms="923" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void testclasses.CreateCO.testCOWithoutChangingQuoteStatus()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testCOWithoutChangingQuoteStatus()[pri:2, instance:testclasses.CreateCO@2bdd8394]" started-at="2025-08-05T23:55:07 IST" name="testCOWithoutChangingQuoteStatus" finished-at="2025-08-05T23:55:33 IST" duration-ms="26893" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Please change the quote status to “Won” to create a commercial order] but found [Please select at least one item from the list]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Please change the quote status to “Won” to create a commercial order] but found [Please select at least one item from the list]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at testclasses.CreateCO.testCOWithoutChangingQuoteStatus(CreateCO.java:39)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCOWithoutChangingQuoteStatus -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:testclasses.CreateCO@2bdd8394]" started-at="2025-08-05T23:55:33 IST" name="teardown" finished-at="2025-08-05T23:55:34 IST" duration-ms="365" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCOWithoutChangingQuoteStatus status=FAILURE method=CreateCO.testCOWithoutChangingQuoteStatus()[pri:2, instance:testclasses.CreateCO@2bdd8394] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="endReport()[pri:0, instance:testclasses.CreateCO@2bdd8394]" started-at="2025-08-05T23:55:34 IST" name="endReport" finished-at="2025-08-05T23:55:35 IST" duration-ms="707" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- testclasses.CreateCO -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
